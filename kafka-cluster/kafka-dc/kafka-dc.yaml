apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-dc
  annotations:
     metallb.universe.tf/allow-shared-ip: default
spec:
  kafka:
    version: 3.1.0
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: "INFO, WARN, ERROR"
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
         type: scram-sha-512
      - name: external
        port: 9094
        type: loadbalancer
        tls: false
        authentication:
         type: scram-sha-512
        configuration:
          bootstrap:
            loadBalancerIP: 10.195.100.69
          brokers:
          - broker: 0
            loadBalancerIP: 10.195.100.66
          - broker: 1
            loadBalancerIP: 10.195.100.67
          - broker: 2
            loadBalancerIP: 10.195.100.68
    authorization:
      type: simple
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "3.1"
      inter.broker.protocol.version: "3.1"
      log4j.rootLogger: "INFO, stdout, kafkaAppender"
      log4j.logger.org.I0Itec.zkclient.ZkClient: "INFO"
      log4j.logger.org.apache.zookeeper: "INFO"
      log4j.logger.kafka: "INFO, WARN, ERROR"
      log4j.logger.org.apache.kafka: "INFO"
      kafka.root.logger.level: "INFO, WARN, ERROR"
      log4j.logger.kafka.controller: "INFO, controllerAppender"
      log4j.logger.kafka.log.LogCleaner: "INFO, cleanerAppender"
      log4j.logger.state.change.logger: "INFO, stateChangeAppender"
      log4j.logger.kafka.authorizer.logger: "INFO, authorizerAppender"
      log4j.logger.kafka.network.Processor: "WARN, requestAppender"
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yaml
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 5Gi
        class: openebs-lvmpv
        deleteClaim: false
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
  zookeeper:
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: zookeeper-metrics
          key: zookeeper-metrics.yaml
    replicas: 3
    config:
      zookeeper.root.logger: "INFO, CONSOLE"
      zookeeper.console.threshold: "INFO"
      zookeeper.log.threshold: "INFO"
      log4j.appender.CONSOLE.Threshold: "INFO"
      log4j.appender.ROLLINGFILE.Threshold: "INFO"
      log4j.appender.TRACEFILE.Threshold: "INFO"
      log4j.rootLogger: "INFO, CONSOLE, WARN, ERROR"
    storage:
      type: persistent-claim
      size: 2Gi
      class: openebs-lvmpv
      deleteClaim: false
  entityOperator:
    topicOperator:
      logging:
        type: inline
        loggers:
          rootLogger.level: "INFO, WARN, ERROR"
    userOperator:
      logging:
        type: inline
        loggers:
          rootLogger.level: "INFO, WARN, ERROR"
